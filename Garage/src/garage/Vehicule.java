/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package garage;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Georgette Gabou
 */
public class Vehicule extends javax.swing.JFrame {

    DefaultTableModel model;

    /**
     * Creates new form Vehicule
     */
    public Vehicule() {
        initComponents();
        try {
            Table();
            recupererinformations();
            recupererinformations1();
        } catch (SQLException ex) {
            Logger.getLogger(Vehicule.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void Table() throws SQLException {
        String nom1 = immatriculation.getText();
        String mdpl = modele.getText();
        String marql = marque.getText();
        //String marqul = marque1.getText();

        try {
            Connexion co = new Connexion();
            Connection con;
            try {
                con = co.connect();
                String columns[] = new String[]{"Immatriculation", "Modele", "Marque", "idClient", "NomClient"};
                String[] data = new String[5];
                model = new DefaultTableModel(null, columns);
                String query = "SELECT * FROM vehicule";
                //+  AND( SELECT c.idClient from client c INNER JOIN vehicule v ON c.idClient = v.idClient WHERE Immatriculation='Immatriculation')";
                PreparedStatement stat = con.prepareStatement(query);
                ResultSet rs = stat.executeQuery();
                int i = 0;
                while (rs.next()) {
//            int id1= rs.getInt("Id");
//            String id=String.valueOf(id1);
                    String nomu = rs.getString("Immatriculation");
                    String mdpu = rs.getString("Modele");
                    String marqu = rs.getString("Marque");
                    String m = rs.getString("idClient");
                    String b= rs.getString("NomClient");

                    data[0] = nomu;
                    data[1] = mdpu;
                    data[2] = marqu;
                    data[3] = m;
                    data[4] = b;
                    model.addRow(data);
                }
                baseDonnees.setModel(model);
                stat.close();
                con.close();

            } catch (ClassNotFoundException ex) {
                Logger.getLogger(getName()).log(Level.SEVERE, null, ex);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

    }

    private void recupererinformations() throws SQLException {

        try {
            Connexion co = new Connexion();
            Connection con = null;

            try {
                con = co.connect();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(getName()).log(Level.SEVERE, null, ex);
            }

            PreparedStatement stat = con.prepareStatement("select idClient from client");
            ResultSet rs = stat.executeQuery();
            while (rs.next()) {
                idClient.addItem(rs.getString("idClient")); //jComboBox1
            }

        } catch (SQLException e) {
            System.out.println("ERREUR" + e.getMessage());

        }

    }
    
    private void recupererinformations1() throws SQLException {

        try {
            Connexion co = new Connexion();
            Connection con = null;

            try {
                con = co.connect();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(getName()).log(Level.SEVERE, null, ex);
            }

            PreparedStatement stat = con.prepareStatement("select NomClient from client");
            ResultSet rs = stat.executeQuery();
            while (rs.next()) {
                jComboBox1.addItem(rs.getString("NomClient")); //jComboBox1
            }

        } catch (SQLException e) {
            System.out.println("ERREUR" + e.getMessage());

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        immatriculation = new javax.swing.JTextField();
        modele = new javax.swing.JTextField();
        marque = new javax.swing.JTextField();
        jToggleButton1 = new javax.swing.JToggleButton();
        jToggleButton2 = new javax.swing.JToggleButton();
        jToggleButton3 = new javax.swing.JToggleButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        baseDonnees = new javax.swing.JTable();
        jToggleButton4 = new javax.swing.JToggleButton();
        jLabel5 = new javax.swing.JLabel();
        idClient = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Script MT Bold", 3, 24)); // NOI18N
        jLabel1.setText("BIENVENUE SUR L'INTERFACE DE GESTION DES VEHICULES");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("Immatriculation du vehicule :");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("Identifiant du client :");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setText("Modele du vehicule :");

        marque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                marqueActionPerformed(evt);
            }
        });

        jToggleButton1.setText("AJOUTER");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jToggleButton2.setText("Supprimer");
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });

        jToggleButton3.setText("QUITTER");
        jToggleButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton3ActionPerformed(evt);
            }
        });

        baseDonnees.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Immatriculation", "Modele", "Marque", "idClient"
            }
        ));
        baseDonnees.setToolTipText("");
        baseDonnees.setDragEnabled(true);
        baseDonnees.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                baseDonneesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(baseDonnees);

        jToggleButton4.setText("MODIFIER");
        jToggleButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton4ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("Marque du vehicule :");

        idClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idClientActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel6.setText("Nom du client :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jToggleButton3, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(immatriculation, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(marque, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                            .addComponent(modele, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                            .addComponent(idClient, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(35, 35, 35))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 774, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jToggleButton1)
                        .addGap(47, 47, 47)
                        .addComponent(jToggleButton2)
                        .addGap(62, 62, 62)
                        .addComponent(jToggleButton4)))
                .addContainerGap(76, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(immatriculation, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(modele, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(marque, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(idClient, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 7, Short.MAX_VALUE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jComboBox1)
                                .addGap(3, 3, 3)))
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jToggleButton2)
                            .addComponent(jToggleButton1)
                            .addComponent(jToggleButton4))
                        .addGap(21, 21, 21)
                        .addComponent(jToggleButton3)
                        .addGap(17, 17, 17))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void marqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_marqueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_marqueActionPerformed

    private void jToggleButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton3ActionPerformed
        // TODO add your handling code here:
        Accueil1 n = new Accueil1();
        n.setVisible(true);
        dispose();
    }//GEN-LAST:event_jToggleButton3ActionPerformed

    public void decharger(){
        immatriculation.setText("");
        modele.setText("");
        marque.setText("");
    }
    
    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
        String nom = immatriculation.getText();
        String mdp = modele.getText();
        String marq = marque.getText();
        String idCli = idClient.getSelectedItem().toString();
         String id = jComboBox1.getSelectedItem().toString();
        if (nom.equals("") && mdp.equals("") && marq.equals("")) {
            JOptionPane.showMessageDialog(null, "Veuillez entrer les informations du vehicule!!!", "Informations incorrectes", JOptionPane.ERROR_MESSAGE);
        } else {
            try {

                Connexion co = new Connexion();
                Connection con = null;
                try {
                    con = co.connect();
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(getName()).log(Level.SEVERE, null, ex);
                }

                String query2 = "INSERT INTO vehicule (Immatriculation, Modele, Marque, idClient, NomClient) VALUES (?,?,?,?,?)";
                PreparedStatement pst = con.prepareStatement(query2);
                pst.setString(1, nom);
                pst.setString(2, mdp);
                pst.setString(3, marq);
                pst.setString(4, idCli);
                pst.setString(5, id);
                
                pst.executeUpdate();
                JOptionPane.showMessageDialog(null, "Vehicule ajouté");

            } catch (SQLException ex) {
                Logger.getLogger(getName()).log(Level.SEVERE, null, ex);
            }
            decharger();
        }
        try {
            Table();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
        // TODO add your handling code here:
        String noms = immatriculation.getText();
//        String mdps = modele.getText();
//        String marqs = marque.getText();
        //String marq1 = marque1.getText();

        if (noms.equals("")) {
            JOptionPane.showMessageDialog(null, "Veuillez selectionner le vehicule a supprimmer !!!", "Informations incorrectes", JOptionPane.ERROR_MESSAGE);
        } else {
            try {

                Connexion co = new Connexion();
                Connection con;
                con = co.connect();
                String query3 = "DELETE FROM vehicule WHERE Immatriculation= ? ";
                PreparedStatement stat = null;
                stat = con.prepareStatement(query3);
                PreparedStatement pst = con.prepareStatement(query3);
//                String Immatriculation;
                pst.setString(1, noms);
                
                //pst.setString(4, marq1);

                pst.executeUpdate();

            Table();

                JOptionPane.showMessageDialog(null, "Vehicule supprime avec succes");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_jToggleButton2ActionPerformed

    private void baseDonneesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_baseDonneesMouseClicked
        int ligne = baseDonnees.getSelectedRow();
        List<String> liste = new ArrayList<>();
        for (int i = 0; i < baseDonnees.getColumnCount(); i++) {
            liste.add("" + baseDonnees.getValueAt(ligne, i));
        }
        immatriculation.setText(liste.get(0));
        modele.setText(liste.get(1));
        marque.setText(liste.get(2));
        //marque1.setText(liste.get(3));


    }//GEN-LAST:event_baseDonneesMouseClicked

    private void jToggleButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton4ActionPerformed

        String as2 = immatriculation.getText();
        String mat2 = modele.getText();
        String nom2 = marque.getText();
        try {

            Connexion co = new Connexion();
            Connection con;
            con = co.connect();
            String query2 = "UPDATE vehicule SET Immatriculation=?, Modele=?, Marque=? ";
            PreparedStatement stat = null;
            stat = con.prepareStatement(query2);
            PreparedStatement pst = con.prepareStatement(query2);
            pst.setString(1, as2);
            pst.setString(2, mat2);
            pst.setString(3, nom2);

            Table();
            pst.executeUpdate();
            //con.close();
            JOptionPane.showMessageDialog(null, "Vehicule modifie");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jToggleButton4ActionPerformed

    private void idClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idClientActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idClientActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vehicule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vehicule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vehicule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vehicule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Vehicule().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable baseDonnees;
    private javax.swing.JComboBox<String> idClient;
    private javax.swing.JTextField immatriculation;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JToggleButton jToggleButton3;
    private javax.swing.JToggleButton jToggleButton4;
    private javax.swing.JTextField marque;
    private javax.swing.JTextField modele;
    // End of variables declaration//GEN-END:variables
}
